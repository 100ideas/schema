{
  "title": "Organization",
  "@id": "schema:Organization",
  "extends": "Thing",
  "role": "secondary",
  "status": "unstable",
  "category": "metadata",
  "description": "An organization such as a school, NGO, corporation, club, etc.",
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The name of the type and all descendant types.",
      "type": "string",
      "enum": [
        "Organization"
      ],
      "default": "Organization",
      "from": "Entity"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "type": "string",
      "from": "Entity"
    },
    "meta": {
      "@id": "stencila:meta",
      "description": "Metadata associated with this item.",
      "type": "object",
      "from": "Entity"
    },
    "alternateNames": {
      "@id": "schema:alternateName",
      "description": "Alternate names (aliases) for the item.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "from": "Thing",
      "aliases": [
        "alternateName"
      ]
    },
    "description": {
      "@id": "schema:description",
      "description": "A description of the item.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "$ref": "Node.schema.json"
          }
        }
      ],
      "from": "Thing"
    },
    "name": {
      "@id": "schema:name",
      "description": "The name of the item.",
      "type": "string",
      "from": "Thing"
    },
    "url": {
      "@id": "schema:url",
      "description": "The URL of the item.",
      "type": "string",
      "format": "uri",
      "from": "Thing"
    },
    "address": {
      "@id": "schema:address",
      "description": "Postal address for the organization.\n",
      "type": "string",
      "from": "Organization"
    },
    "brands": {
      "@id": "schema:brand",
      "description": "Brands that the organization is connected with.\n",
      "type": "array",
      "items": {
        "$ref": "Brand.schema.json"
      },
      "from": "Organization",
      "aliases": [
        "brand"
      ]
    },
    "contactPoints": {
      "@id": "schema:contactPoint",
      "description": "Correspondence/Contact points for the organization.\n",
      "type": "array",
      "items": {
        "$ref": "ContactPoint.schema.json"
      },
      "from": "Organization",
      "aliases": [
        "contactPoint"
      ]
    },
    "departments": {
      "@id": "schema:department",
      "description": "Departments within the organization. For example, Department of Computer Science, Research & Development etc.\n",
      "type": "array",
      "items": {
        "$ref": "Organization.schema.json"
      },
      "from": "Organization",
      "aliases": [
        "department"
      ]
    },
    "funders": {
      "@id": "schema:funder",
      "description": "Organization(s) or person(s) funding the organization.\n",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "Organization.schema.json"
          },
          {
            "$ref": "Person.schema.json"
          }
        ]
      },
      "from": "Organization",
      "aliases": [
        "funder"
      ]
    },
    "legalName": {
      "@id": "schema:legalName",
      "description": "Legal name for the Organization. Should only include letters and spaces.\n",
      "type": "string",
      "pattern": "[a-zA-Z]",
      "from": "Organization"
    },
    "parentOrganization": {
      "@id": "schema:parentOrganization",
      "description": "Entity that the Organization is a part of. For example, parentOrganization to a department is a university.\n",
      "allOf": [
        {
          "$ref": "Organization.schema.json"
        }
      ],
      "from": "Organization"
    }
  },
  "file": "Organization.schema.yaml",
  "children": [],
  "descendants": [],
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://stencila.github.com/schema/Organization.schema.json",
  "source": "https://github.com/stencila/schema/blob/master/schema/Organization.schema.yaml",
  "type": "object",
  "propertyAliases": {
    "alternateName": "alternateNames",
    "brand": "brands",
    "contactPoint": "contactPoints",
    "department": "departments",
    "funder": "funders"
  },
  "additionalProperties": false,
  "required": [
    "type"
  ]
}
